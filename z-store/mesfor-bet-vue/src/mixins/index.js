import axios from 'axios'
export default {
  data() {
    return {}
  },
  methods: {
    transCountriesMix(value) {
      try {
        value.forEach(item => {
          let RegionName = item.RegionName
            .replace('America','Amerika')
            .replace('Asia','Asya')
            .replace('Africa','Afrika')
            .replace('Antigua-and-Barbuda','Antigua-and-Barbuda')
            .replace('Abkhazia','Abhazya')
            .replace('Algeria','Cezayir')
            .replace('Armenia','Ermenistan')
            .replace('Argentina','Arjantin')
            .replace('Albania','Arnavutluk')
            .replace('America','Amerika')
            .replace('America College','Kuzey Amerika Universitesi')
            .replace('Australia','Avusturalya')
            .replace('Avusturalya & Oceania','Avusturalya')
            .replace('Austria','Avusturya')
            .replace('Azerbaijan','Azerbaycan')
            .replace('Belarus','Beyaz Rusya')
            .replace('Bolivia','Bolivya')
            .replace('British-Antarctic-Territory','Britanya-Antarktika-Bölgesi')
            .replace('British-Virgin-Islands','Britanya Virjin Adaları')
            .replace('Bouvet Island','Bouvet Adası')
            .replace('Bosnia and Herzegovina','Bosna Hersek')
            .replace('Belgium','Belçika')
            .replace('Basque-Country','Bask Ülkesi')
            .replace('Brazil','Brezilya')
            .replace('Bulgaria','Bulgaristan')
            .replace('Commonwealth','İngiliz Milletler Topluluğu')
            .replace('Cocos-Keeling-Islands','Cocos Adaları')
            .replace('Christmas-Island','Christmas-Island')
            .replace('Central-African-Republic','Orta Afrika Cumhuriyeti')
            .replace('Canary-Islands','Kanarya Adaları')
            .replace('Caribbean Netherlands','Karayip Hollandası')
            .replace('Canada','Kanada')
            .replace('Cameroon','Kamerun')
            .replace("Cote d Ivoire",'Fildişi Sahili')
            .replace('Colombia','Kolombiya')
            .replace('China','Çin')
            .replace('Cambodia','Kamboçya')
            .replace('Chad','Çad')
            .replace('Chile','Şili')
            .replace('Cook-Islands','Cook Adaları')
            .replace('Cuba','Küba')
            .replace('Christmas Island','Noel Adaları')
            .replace('Cape Verde','Yeşil Burun Adaları')
            .replace('Costa Rica','Kosta Rika')
            .replace('Cyprus','Kıbrıs')
            .replace('Croatia','Hırvatistan')
            .replace('Czech Republic','Çek Cumhuriyeti')
            .replace('Czech Rep.','Çek Cumhuriyeti')
            .replace('Comoros','Komorlar')
            .replace('Cayman Islands','Cayman Adaları')
            .replace('Cyprus','Kıbrıs')
            .replace('Djibouti','Cibuti')
            .replace('Democratic Republic of the Congo','Demokratik Kongo Cumhuriyeti')
            .replace('Denmark','Danimarka')
            .replace('Dominican Republic','Dominik Cumhuriyeti')
            .replace('DR Congo','Kongo')
            .replace('Equatorial-Guinea','Ekvator Ginesi')
            .replace('England','İngiltere')
            .replace('Estonia','Estonya')
            .replace('Ethiopia','Etyopya')
            .replace('Europe','Avrupa')
            .replace('European-Union','Avrupa Birliği')
            .replace('East-Timor','Doğu Timor')
            .replace('Ecuador','Ekvator')
            .replace('Egypt','Mısır')
            .replace('French-Southern-Territories','Fransız-Güney Toprakları')
            .replace('French-Polynesia','Fransız Polinezyası')
            .replace('Falkland-Islands','Falkland Adaları')
            .replace('France','Fransa')
            .replace('Philippines','Filipinler')
            .replace('Finland','finlandiya')
            .replace('Fiji','Fiji')
            .replace('Great Britain','Büyük Britanya')
            .replace('Faroe Islands','Faro Adaları')
            .replace('Macedonia','Makedonya')
            .replace('Georgia','Gürcistan')
            .replace('French Guiana','Fransız Guyanası')
            .replace('Germany','Almanya')
            .replace('Ghana','Gana')
            .replace('Greenland','Grönland')
            .replace('Gibraltar','Cebelitarık')
            .replace('Greece','Yunanistan')
            .replace('Hungary','Macaristan')
            .replace('Italy','İtalya')
            .replace('Iceland','İzlanda')
            .replace('India','Hindistan')
            .replace('Isle-of-Man','Man Adası')
            .replace('Indonesia','Endenozya')
            .replace('Iraq','Irak')
            .replace('Iran','İran')
            .replace('Israel','İsrail')
            .replace('Ivory Coast','Fildişi Sahili')
            .replace('Jamaica','Jamaika')
            .replace('Japan','Japonya')
            .replace('Jordan','Ürdün')
            .replace('Kazakhstan','Kazakistan')
            .replace('Korea Republic','Kore Cumhuriyeti')
            .replace('Korea (South)','Güney Kore')
            .replace('Kongo','Kongo Cumhuriyeti')
            .replace('Kuwait','Kuveyt')
            .replace('Kyrgyzstan','Kırgızistan')
            .replace('Latvia','Letonya')
            .replace('Liberia','Liberya')
            .replace('Lebanon','Lübnan')
            .replace('Lithuania','Litvanya')
            .replace('Korea','Kuzey Kore')
            .replace('Luxembourg','Lüxemburg')
            .replace('Malaysia','Malezya')
            .replace('Mauritania','Marutanya')
            .replace('Mexico','Meksika')
            .replace('Mongolia','Moğolistan')
            .replace('Nagorno-Karabakh','Nagorno-Karabakh')
            .replace('Mozambique','Mozambik')
            .replace('Micronesia','Mikronezya')
            .replace('Moldova','Moldovya')
            .replace('Madagascar','Madagaskar')
            .replace('Morocco','Fas')
            .replace('Marshall-Islands','Marshall Adaları')
            .replace('Maldives','Maldivler')
            .replace('Norfolk-Island','Norfolk Adaları')
            .replace('New-Caledonia','Yeni Kaledonya')
            .replace('Netherlands-Antilles','Hollanda Antilleri')
            .replace('Mariana-Islands','Kuzey Mariana Adaları')
            .replace('Netherlands','Hollanda')
            .replace('New Caledonia','Yeni Kaledonya')
            .replace('New Zealand','Yeni Zelanda')
            .replace('Ireland','İrlanda')
            .replace('Central America','Orta Amerika')
            .replace('Norway','Norveç')
            .replace('Nicaragua','Nikaraguay')
            .replace('Nigeria','Nijerya')
            .replace('Olympics','Olympikler')
            .replace('Oman','Umman')
            .replace('Qatar','Katar')
            .replace('Poland','Polonya')
            .replace('Portugal','Portekiz')
            .replace('Puerto-Rico','Porta Riko')
            .replace('Pitcairn-Islands','Pitcairn Adaları')
            .replace('Papua-New-Guinea','Papua Yine Gine')
            .replace('Palestine','Filistin')
            .replace('Rwanda','Ruanda')
            .replace('Romania','Romanya')
            .replace('Republic of Ireland','İrlanda Cumhuriyeti')
            .replace('Republic of the Congo','Kongo Cumhuriyeti')
            .replace('Russia','Rusya')
            .replace('Sao-Tome-and-Principe','Sao-Tome-and-Principe')
            .replace('Saint-Vincent-and-the-Grenadines','Saint-Vincent-and-the-Grenadines')
            .replace('Saint-Kitts-and-Nevis','Saint Kitts')
            .replace('Saudi Arabia','Suudi Arabistan')
            .replace('Solomon Islands','Solomon Adaları')
            .replace('Seychelles','Seyşeller')
            .replace('Switzerland','İsviçre')
            .replace('Spain','İspanya')
            .replace('Singapore','Singapur')
            .replace('Sweden','İsveç')
            .replace('Korea','Kore')
            .replace('Slovakia','Slovakya')
            .replace('Slovenia','Slovenya')
            .replace('Somalia','Somali')
            .replace('South Sudan','Güney Sudan')
            .replace('Serbia','Sırbistan')
            .replace('Scotland','iskoçya')
            .replace('Syria','Suriye')
            .replace('Turkmenistan','Türkmenistan')
            .replace('Trinidad and Tobago','Trinidad ve Tobago')
            .replace('Turks and Caicos Islands','Turks and Caicos Adaları')
            .replace('Turkey','Türkiye')
            .replace('Trinidad-and-Tobago','Trinidad-and-Tobago')
            .replace('Tanzania','Tanzanya')
            .replace('Taiwan','Tayvan')
            .replace('Tajikistan','Tacikistan')
            .replace('Thailand','Tayland')
            .replace('Tunisia','Tunus')
            .replace('Ukraine','Ukrayna')
            .replace('Uzbekistan','Özbekistan')
            .replace('USA','Amerika Birleşik Devletleri')
            .replace('US-Virgin-Islands','US Virgin Adaları')
            .replace('United Kingdom','Birleşik Krallık')
            .replace('United Arab Emirates','Birleşik Arap Emirlikleri')
            .replace('Vatican City','Vatikan')
            .replace('Wallis and Futuna','Wallis and Futuna')
            .replace('Wales','Galler')
            .replace('World','Uluslararası')
            .replace('South','Güney')
            .replace('Northern','Kuzey')
            .replace('North','Kuzey')
          item.RegionName = RegionName
        })
        value.forEach(item => {
          let LeagueName = item.LeagueName
            .replace(' World',' Uluslararası')
            .replace('Championship','Şampiyonlar Ligi')
            .replace('Regionalliga','Bölgesel')
            .replace('International Friendlies','Uluslararası Dosluk Maçı')
            .replace('Premiership','Premier Ligi')
            .replace('Premier League 2','Premier 2. Ligi')
            .replace('I Liga','1. Ligi')
            .replace('League','Ligi')
            .replace('2nd Division','2. Ligi')
            .replace('Second Division','2. Ligi')
            .replace('Premijer Liga','Premier Ligi')
            .replace('Premjer Liga','Premier Ligi')
            .replace('Superliga','Süperligi')
            .replace('Super League','Süperligi')
            .replace('Women','Kadınlar')
            .replace('Club','Klüp')
            .replace('Clubs','Klüpler')
            .replace('Group','Grup')
            .replace('Norther','Kuzey')
            .replace(' Liga','Ligi')
            .replace('1st','1.')
            .replace('2nd','2.')
            .replace('3rd','3.')
            .replace('One','1')
            .replace('Two','2')
            .replace(' Cup',' Kupası')
            .replace('Football','Futbol')
            .replace('National','Ulusal')
            .replace('Challenger','Elemeler')
            .replace('Development','Geliştirme')
            .replace('Eerste','1.')
            .replace('West','Batı Ligi')
            .replace('North','Kuzey Ligi')
            .replace('Northest','Uzak Kuzey Ligi')
            .replace('Super','Süper')
            .replace('Regionalliga Northeast','Kuzey Bölgesel Ligi')
            .replace('Klüp Friendlies','Kulüpler Arası Dosluk Maçı')
          item.LeagueName = LeagueName
        })
      } catch (error) {
        console.error('No RegionName')
      }
    },
    transMarketsMix(value) {
      try {
        value.forEach(item => {
          if (item.name.value) {
            const results = item.name.value
            .replace('1st Half Result', 'Devre 1 Sonucu')
            .replace('2nd Half Result', 'Devre 2 Sonucu')
            .replace('Most Goals - 00:00 - 05:00', '00:00 - 05:00 Hangi Takım Çok  Gol Atar')
            .replace('Most Goals - 05:01 - 10:00', '05:01 - 10:00 Hangi Takım Çok  Gol Atar')
            .replace('Most Goals - 00:00 - 15:00', '00:01 - 15:00 Hangi Takım Çok  Gol Atar')
            .replace('Most Goals - 15:01 - 30:00', '15:01 - 30:00 Hangi Takım Çok  Gol Atar')
            .replace('Most Goals - 30:01 - Halftime', '30:01 - Devre 1 Hangi Takım Çok  Gol Atar')
            .replace('Most Goals - Halftime - 60:00', 'Devre 1 - 60:00 Hangi Takım Çok  Gol Atar')
            .replace('Most Goals - 60:01 - 75:00', '60:01 - 75:00 Hangi Takım Çok  Gol Atar')
            .replace('Most Goals - 75:01 - Fulltime', '75:01 - Maç Sonu Hangi Takım Çok  Gol Atar')
            .replace('Any Team To Come From Behind And Win', 'Takımlardan Birisi Geri-Donüş Yapar Ve Kazanır')
            .replace('Win From Behind', 'Hangi Takım Geri-Donüş Yapar')
            .replace('Both Teams To Score', 'Her İki Takım Gol Atar')
            .replace('Odd/Even', 'Tek/Çift')
            .replace('Double Chance', 'Çifte Şans')
            .replace('Clean Sheet', 'Hangi Takım Gol Yemeden Kazanır')
            .replace('Total Goals', 'Toplam Gol')
            .replace('1st Half - Correct Score', 'Devre 1 Kesin Skor')
            .replace('2nd Half - Correct Score', 'Devre 2 Kesin Skor')
            .replace('1st Half', 'Devre 1')
            .replace('2nd Half', 'Devre 2')
            .replace('Draw No Bet', 'Beraberlikte İade')
            .replace('Both Teams to Score Both Halves', 'Her İki Devre Her İki Takım Gol Atar')
            .replace('Goal To Be Scored Both Halves', 'Her İki Devre Gol Olurmu')
            .replace(' Or More Goals To Be Scored Both Halves', ' veya Daha Fazla Gol Olur (Her İki Devre)')
            .replace(' Or More Goals To Be Scored', ' veya Daha Fazla Gol Olurmu')
            .replace(' to Win and Both Teams to Score', ' Kazanır ve İki Takım Gol Atar')
            .replace(' to Win Both Halves', ' Her İki Devre Kazanır')
            .replace('Win Both Halves', 'Her İki Devre Kazananı')
            .replace('Goal To Be Scored', 'Gol Olurmu')
            .replace('Number of Teams to Score Regular Time', 'Normal Sürede Gol Atacak Takım Sayısı')
            .replace('Regular Time', 'Normal Süre')
            .replace('Correct Score', 'Kesin Skor')
            .replace('Winning Margin', 'Kazanma Aralığı')
            .replace('Match Won by', 'Maç Sonu Gol Farkı Olurmu')
            .replace('1st Team to Score', '1.Golü Golü Hangi Takım Atar')
            .replace('Last Team to Score', 'Son Golü Hangi Takım Atar')
            .replace('First Team to Score', '1.Golü Hangi Takım Atar')
            .replace('Second Team to Score', '2.Golü Hangi Takım Atar')
            .replace('Third Team to Score', '3.Golü Hangi Takım Atar')
            .replace('Fourth Team to Score', '4.Golü Hangi Takım Atar')
            .replace('Fifth Team to Score', '5.Golü Hangi Takım Atar')
            .replace('Sixth Team to Score', '6.Golü Hangi Takım Atar')
            .replace('Sventh Team to Score', '7.Golü Hangi Takım Atar')
            .replace('Multi Goal', 'Çoklu Skor Tahmini')
            .replace('Half With Most Goals', 'Hangi Devre Daha Fazla Gol Olur')
            .replace('Run of Play', 'Favori Bahisi')
            .replace('Half Time Lead and Fail to Win', 'Devre 1 Kazanır Maç Sonu Kaybeder')
            .replace('Both Teams to Score and Either Team to Win', 'Her İki Takım Gol Atar ve Biri Kazanır')
            .replace(' to Win to Nil', ' Gol Yemeden Kazanır')
            .replace('Halftime and Fulltime', 'Devre 1 Ve Maç Sonu')
            .replace('To Win', 'Kazanır')
            .replace('Total Corners', 'Toplam Korner')
            .replace('Total Corner Bands', 'Toplam Korner Aralığı')
            .replace('To Lead at Anytime', 'Öne Geçermi')
            .replace(' - Half Time', ' Devre 1 ')
            .replace('1-st', '1.')
            .replace('1st', '1.')
            .replace('2nd', '2.')
            .replace('3rd', '3.')
            .replace('4th', '4.')
            .replace('5th', '5.')
            .replace('No Bet', 'İade')
            .replace('- Exact', 'Kesin')
            .replace('Goal Exactly', '')
            .replace('Goals Exactly', '')
            .replace('Multiple', 'Çoklu')
            .replace('Second Team to Score', 'Deplasman Gol Atar')
            .replace('Full Time', 'Maç Sonu')
            .replace('Fulltime', 'Maç Sonu')
            .replace('Halftime', 'Devre 1')
            .replace('Player to Score Exactly 1 Goal', 'Hangi Oyuncu 1 Gol Atar')
            .replace('Player to Score Exactly 2 Goals', 'Hangi Oyuncu 2 Gol Atar')
            .replace('Player to Score Exactly 3 Goals', 'Hangi Oyuncu 3 Gol Atar')
            .replace('Player to Score 1 or More Goals', 'Hangi Oyuncu 1 ve Üzeri Gol Atar')
            .replace('Player to Score 2 or More Goals', 'Hangi Oyuncu 2 ve Üzeri Gol Atar')
            .replace('Player to Score 3 or More Goals', 'Hangi Oyuncu 3 ve Üzeri Gol Atar')
            .replace('Last Golcü', 'Son Golü Hangi Oyuncu Atar')
            .replace('Extra Time', 'Uzatma')
            .replace('Win Either Half', 'Her İki Devre Kazananı')
            .replace(' Goalscorer', ' Golcü')
            .replace('Anytime Golcü', 'Hangi Oyuncu Gol Atar')
            .replace('3way Handicap', '3\'lü Handikap Normal Süre')
            .replace('2Way Handicap', ' 2 li Handikap')
            .replace('Player to Outscore Opposition', 'Hangi Oyuncu Takımını Öne Geçirir')
            .replace('Total Yellow Cards', 'Toplam Sarı Kart')
            .replace('Yellow Cards Matchbet', 'Sarı Kart Sonucu')
            .replace('Total Red Cards', 'Toplam Kırmızı Kart')
            .replace('Red Cards Matchbet', 'Kırmızı Kart Sonucu')
            .replace('Corners Matchbet', 'Korner Sonucu')
            .replace('First Yellow Card', 'İlk Sarı Kart')
            .replace('First Half - First Corner', 'İlk Yarı-İlk-Korner')
            .replace('Half With Most Yellow Cards', 'Devre Sarı Kart')
            .replace('Number of Penalties', 'Penaltı Sayısı')
            .replace('Both Teams Shown a Yellow Card', 'Her İki Takım Sarı Kart')
            .replace('Both Teams Shown a Red Card', 'Her İki Takım Kırmızı Kart')
            .replace('Half With Most Corners', 'Hangi Devre Daha Çok Korner Olur')
            .replace('2nd Goalscorer', '2.Golü Hangi Oyuncu Atar')
            .replace('Rest of the Match - Current Score', 'Kalan Sürede Kim Kazanaır Aktif Skor')
            .replace('Rest of the Half - Current Score', 'Devre 1 Kalan Sürede Kim Kazanaır Aktif Skor')
            .replace('Player to Score First and their Team to Draw the Match', 'Beraberlik Golünü Hangi Oyuncu Atar')
            .replace('Player to Score First and their Team to Lose the Match', 'Kaybeden Takımın İlk Golünü Hangi Oyuncu Atar')
            .replace('Player to Score First and their Team to Win the Match', 'Kazanan Takımın İlk Golünü Hangi Oyuncu Atar')
            .replace('Player to Score and their Team to Win the Match', 'Galibiyet Golünü Hangi Oyuncu Atar')
            .replace(/Scorecast/i, 'Oyuncu Gol Sayısı')
            .replace(/to Score in Both Halves/i, 'Her İki Devre Gol Atar')
            .replace(/^Exact Number of Goals/i, 'Kesin Gol Sayısı ')
            .replace(/Total Goal Bands/i, 'Toplam Gol Aralığı')
            .replace(/\sor\s/i, ' veya ')
            .replace(/\sand\s/i, ' ve ')
            .replace(/^Result after/i, 'Dakika Sonucu')
            .replace('Match Result', 'Maç Sonucu')
            .replace(/^Result/, 'Maç Sonucu')
            .replace(/min$/i, '')
            .replace(/^Last/i, 'Son')
            .replace(/Yellow Card/i, 'Sarı Kart')
            .replace(/Corner/i, 'Korner')
            .replace('Player', 'Hangi Oyuncu ')
            .replace('To Score', ' Gol Atar')
            .replace('Race to', ' Gol Yarışı')
            .replace(/goals$/i, ' Gol')
            .replace(/SecondHalf$/i, 'Devre 2')
            .replace(/RegularTime$/i, 'Normal Süre')
            item.name.value = results
          }
        })
      } catch (error) {
        console.error('No Markets')
      }
    },
    transOddsMix(value) {
      try {
        value.forEach(item => {
          item.options.forEach(item2 => {
            if(item2.name.value){
              const results = item2.name.value
              .replace('Equal number of happenings', 'Eşitlik')
              .replace('Equal number of goals', 'Eşitlik')
              .replace('to win and both teams to score', 'Kazanır ve iki takım gol atar')
              .replace('to win by any other score', 'Başka skorla kazanır')
              .replace('with either or both teams not to score', 'takımlardan biri veya her ikisi gol atamaz')
              .replace('Both teams to score and the match to end in a draw', 'İki takım gol atar ve Maç berabere biter')
              .replace('Both teams to score and 1st half to end in a draw', 'İki takım gol atar ve Devre 1 berabere biter')
              .replace('Both teams to score and first half to end in a draw', 'İki takım gol atar ve Devre 1 berabere biter')
              .replace('Both teams to score and second half to end in a draw', 'İki takım gol atar ve Devre 2 berabere biter')
              .replace('both teams to score', 'İki takım da gol atar')
              .replace('Both teams not to score', 'İki takım da gol atamaz')
              .replace('to win by exactly', 'Kesinlikle')
              .replace('Neither team wins both halves', 'Hiçbiri')
              .replace('None team to score in both halves', 'Hiçbiri')
              .replace('Neither team to score in both halves', 'Hiçbiri Atamaz')
              .replace('Both teams to score in both halves', 'Her Takım da Atar')
              .replace(' to score the 1st goal of the match', '')
              .replace('No Goal', 'Gol Olmaz')
              .replace('No goal', 'Gol Olmaz')
              .replace('No corner', 'Korner Olmaz')
              .replace('No yellow card', 'Sarı Kart Olmaz')
              .replace('No red card', 'Kırmızı Kart Olmaz')
              .replace('Handicap Tie', 'Handikap Eşitlik')
              .replace('combined', '')
              .replace('Red Card - Yes/No', 'Kırmızı Kar Evet/Hayır')
              .replace('Penalty - Yes/No', 'Penaltı Evet/Hayır')
              .replace('scorer', '')
              .replace('scored', '')
              .replace('1st Half', 'Devre 1')
              .replace('2nd Half', 'Devre 2')
              .replace('Odd', 'Tek')
              .replace('Even', 'Çift')
              .replace('Over', 'Üst')
              .replace('Under', 'Alt')
              .replace('over', 'Üst')
              .replace('under', 'Alt')
              .replace('Lead', 'Öne Geçer')
              .replace('Win', 'Kazanır')
              .replace('Win by', 'Kazanır')
              .replace('Lose', 'Kaybeder')
              .replace('Draw', 'Beraberlik')
              .replace('/ Draw', 'Beraberlik')
              .replace('any other score', 'Diğer')
              .replace('Any other score', 'Diğer')
              .replace('to win', 'Kazanır')
              .replace('to win by', 'Kazanır')
              .replace('not to score', 'gol atamaz')
              .replace('None', 'Hiçbiri')
              .replace('One', 'Biri')
              .replace('only', '')
              .replace('One', 'Biri')
              .replace('No goalscorer', 'Kimse Gol Atamaz')
              .replace('Score draw', 'Skorda Beraberlik')
              .replace(/^[No]{2}$/, 'Hayır')
              .replace(/^[No\s]{2}/, 'Hayır')
              .replace(/[No]{2}$/, 'Hayır')
              .replace(/^[Yes]{3}/, 'Evet')
              .replace(/[Yes]{3}$/, 'Evet')
              .replace('Neither', 'Hiçbiri')
              .replace('Both', 'Her İkisi')
              .replace('or more', ' veya üzeri')
              .replace(' goals', ' gol')
              .replace(' or ', ' veya ')
              .replace('and ', ' ve ')
              item2.name.value = results
            }
          })
        })
      } catch (error) {
        console.error('No Odds')
      }
    },
    transMarketsMixBasket(value) {
      try {
        value.forEach(item => {
          if(item.name.value){
            const markets = item.name.value
            // .replace('Total Points', 'Toplam Basket')
            .replace('Handicap', 'Handikap')
            .replace('handicap', 'handikap')
            .replace('(Points scored in this quarter only)', '')
            .replace('Winning Margin', 'Kazanma Aralığı')
            .replace('Three Way (Regular time only)', '3 \'lü Bahis Normal Süre')
            .replace('Three Way - (1st Half)', '3 \'lü Bahis Devre 1')
            .replace('Will the final score be odd or even?', 'Tek/Çift')
            .replace('Halftime/Fulltime', 'Devre 1 ve Maç Sonu')
            .replace('Will the match go into overtime?', 'Maç Uzatmaya Gidermi')
            .replace('1st Half', 'Devre 1')
            .replace('1st Quarter', '1.Çeyrek')
            .replace('2nd Quarter', '2.Çeyrek')
            .replace('3rd Quarter', '3.Çeyrek')
            .replace('4th Quarter', '4.Çeyrek')
            .replace('1st quarter', '1.Çeyrek')
            .replace('2nd quarter', '2.Çeyrek')
            .replace('3rd quarter', '3.Çeyrek')
            .replace('4th quarter', '4.Çeyrek')
            .replace(' - Double - Result', ' Çifte Sonuç')
            .replace('Both teams to score', 'Her İki Takım')
            .replace('Will both teams score', 'Her İki Takım')
            .replace(' or more points?', ' veya Üzeri Sayı')
            .replace(' or more points in the', ' veya Üzeri')
            .replace(' ve each team to score', ' Her Takım')
            .replace('points in 1st half', 'Sayı Yaparmı  Devre 1')
            .replace('Money Line ve Total Points', 'Maç Sonu ve Toplam Basket')
            .replace('Money Line', 'Maç Sonucu')
            .replace('How many points will', 'Basket Sayısı Alt-Üst')
            .replace(' score?', '')
            .replace(' score in the', '')
            .replace('In which quarter will the highest score be recorded?', 'Hangi Çeyrekte Daha Fazla Basket Olur')
            .replace('Alt-Üst be scored in the game? (Regular time only)', 'Tahmini')
            .replace('(only points scored in this quarter)', '')
            .replace('(Overtime not included)', '')
            .replace('only points scored in this quarter/overtime not included', '')
            .replace('2nd Half', 'Devre 2')
            .replace('Race to', 'Basket Yarışı')
            .replace('Points in', 'Basket')
            .replace('total be odd or even?', ' Toplam Tek/Çift ')
            .replace('Including overtim', 'Uzatma Dahil')
            .replace('including overtim', 'Uzatma Dahil')
            .replace('incl. overtime', 'Uzatma Dahil')
            .replace(' a double-double in the game?', ' Oyunda İkilik')
            .replace(' a double-double in the game', ' Oyunda İkilik')
            .replace('Totals', 'Toplam Alt/Üst Basket')
            .replace('How many turnovers will', ' Faul Saysı ')
            .replace('How many total points and assists will', 'Toplam Basket ve Asist')
            .replace('How many total steals and blocks will', 'Toplam Top Çalma ve Blok ')
            .replace('How many total points and rebounds will', 'Toplam Rebound ve Asist')
            .replace('How many total rebounds and assists will', 'Toplam Rebound ve Asist')
            .replace('How many total points, rebounds and assists will', 'Toplam Rebound ve Asist')
            .replace('How many assists will', 'Toplam Asist')
            .replace('How many rebounds will', 'Toplam Rebound')
            .replace('How many three-pointers will', 'Toplam Üçlük Sayı')
            .replace('How many blocks will', 'Blok Sayısı ')
            .replace('How many steals wil', 'Top Çalma Sayısı ')
            .replace('Field Goal and Win', 'FG ve Kazanan')
            .replace(' both teams to score', ' Her İki Takım Basket')
            .replace('Will the 2nd half total be odd or even?', 'Devre 2 Toplam Tek-Çift')
            .replace('In which half will the most points be scored?', 'Hang Devre Daha Çok Sayı Olur')
            .replace(' total points', ' Toplam')
            .replace('3-way', '3\' lü')
            .replace('Three Way', '3\' lü')
            .replace(' or more points', ' veya Üzeri')
            .replace('  both teams to score', ' Her İki Takım')
            .replace(' record', '')
            .replace(' make?', '')
            .replace(' 1st half', ' Devre 1')
            .replace('Will the', ' ')
            .replace('Will ', ' ')
            .replace('Field Goal', 'FG')
            .replace('First', '1. ')
            .replace('1st Half', 'Devre 1')
            .replace('1st half', 'Devre 1')
            .replace('2nd Half', 'Devre 2')
            .replace('2nd half', 'Devre 2')
            .replace('Tie', 'Eşitlik')
            .replace(' and ', ' ve ')
            .replace('rebounds', 'rebound')
            .replace(' totals', 'Toplam')
            .replace(' total', 'Toplam')
            .replace('Total Points', 'Toplam Sayı')
            .replace('moneyline (only points scored in the Quarter/overtime not included)', 'Normal Süre')
            .replace('(only Points scored in the Quarter/Overtime not included)', 'Normal Süre')
            item.name.value = markets
          }
        })
      } catch (error) {
        console.error('No Markets(Basket)')
      }
    },
    transOddsMixBasket(value) {
      try {
        value.forEach(item => {
          item.results.forEach(item2 => {
            if(item2.name.value){
              const results = item2.name.value
              .replace('Over', 'Üst')
              .replace('Under', 'Alt')
              .replace('over', 'Üst')
              .replace('under', 'Alt')
              .replace('Yes', 'Evet')
              .replace('yes', 'evet')
              .replace('No', 'Hayır')
              .replace('no', 'hayır')
              .replace('Draw', 'Beraberlik')
              .replace('Neither', 'Hiçbiri')
              .replace('Both', 'Her İkisi')
              .replace('or more', ' veya üzeri')
              .replace('or', ' veya ')
              .replace('and', ' ve ')
              .replace('less', ' daha az ')
              .replace('Odd', 'Tek')
              .replace('Even', ' Çift')
              .replace('to win', 'Kazanır')
              .replace('to win by', 'Kazanır')
              .replace('1st Quarter', '1.Çeyrek')
              .replace('2nd Quarter', '2.Çeyrek')
              .replace('3rd Quarter', '3.Çeyrek')
              .replace('4th Quarter', '4.Çeyrek')
              .replace('Team 1', 'Evsahibi')
              .replace(' points', ' Sayı')
              .replace('Team 2', 'Deplasman')
              item2.name.value = results
            }
          });
        })
      } catch (error) {
        console.error('No Odds (Basket)')
      }
    },
    getFlagsMix(value) {
      try {
        return `../../img/${value}.png`
      } catch (error) {
        return `../../img/Unknown.png`
      }
    },
    setGroupMix(arr, value) {
      try {
        return arr.reduce(function (acc, obj) {
          let key = obj[value];
          if (!acc[key]) {
            acc[key] = [];
          }
          acc[key].push(obj);
          return acc;
        }, {});
      } catch (error) {
        console.error('No Group Data')
      }
    },
    async betInfoMix() {
      const credit = await axios.get(`/api/admin/credit-info/Üyeler`)
      const total = await axios.get(`/api/admin/total-info/Hepsi`)
      const won = await axios.get(`/api/admin/won-info/Hepsi`)
      Promise.all([credit, total, won]).then((result) => {
        const final = {
          ...result[0].data.creditinfo,
          ...result[1].data.totalinfo,
          ...result[2].data.woninfo,
        }
        this.$store.commit('setBetInfo', final)
      })
    }
  }
}